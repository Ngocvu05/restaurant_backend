server.port=8081
spring.application.name=user-service
spring.profiles.active=dev
# Database config
spring.datasource.url=jdbc:mysql://localhost:3306/restaurant
spring.datasource.username=restaurant_user
spring.datasource.password=restaurant_pass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#JPA config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Upload directory
spring.web.resources.static-locations=classpath:/static/,file:uploads/
file.upload-dir=uploads
# ----------------------------------------
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=dinhngocvuit@gmail.com
spring.mail.password=iygf qbff anys ptdw
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# allow all origin access WebSocket (option each environment)
spring.web.cors.allowed-origins=http://localhost:3000
#spring.websocket.allowed-origins=*
spring.websocket.message-broker.enabled=true
spring.websocket.sockjs.enabled=true
# increase time
spring.websocket.session-timeout=300000 # 5 phút
# server.port=8080
# websocket.port=8081
# JWT config
jwt.secret=bXktc3VwZXItc2VjcmV0LWtleS1tdXN0LWJlLWF0LWxlYXN0LTMyLWNoYXJhY3RlcnMtbG9uZw==
jwt.expiration=86400000
jwt.algorithm=HS256

#Cloudinary configuration
cloudinary.cloud-name=dismwddmg
cloudinary.api-key=125162511296926
cloudinary.api-secret=DYmhS0kM5zms6POZZ4BbxY_H5ZI
# ----------------------------------------
# Eureka Client Config (Discovery Service)
# ----------------------------------------
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
# ----------------------------------------
#Prometheus Metrics Config
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.access=read_only
management.prometheus.metrics.export.enabled=true
management.server.port=8081
# ----------------------------------------
#RabbitMQ Config
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:chat_user}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:chat_pass}
spring.rabbitmq.virtual-host=${RABBITMQ_VIRTUAL_HOST:/}
spring.rabbitmq.connection-timeout=30000

spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=1000
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10000
spring.rabbitmq.template.retry.multiplier=2

spring.rabbitmq.listener.simple.missing-queues-fatal=false
# ----------------------------------------
# Logging for easy debug
#logging.level.org.springframework.web.socket=DEBUG
#logging.level.org.springframework.messaging=DEBUG
logging.file.name=${LOG_PATH:logs/<service-name>.log}
logging.level.root=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.messaging.simp.broker=DEBUG
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
